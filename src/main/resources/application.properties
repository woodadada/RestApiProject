# jsp 설정
spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp
# 정적 리소스 서버 빌드 없이 새로고침
spring.devtools.livereload.enabled=true
spring.freemarker.cache=false
spring.thymeleaf.cache=false
#server.servlet.jsp.init-parameters.development=true

# set h2 properties
# 사실 path는 h2이 기본 path 이다.
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:~/test
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#spring.jpa.generate-ddl=true
# 서버 실행 시 tabel drop 후 create
spring.jpa.hibernate.ddl-auto=create

# jpa 실행 쿼리 콘솔 창 출력
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# spring security
spring.security.user.name=user1
spring.security.user.password=pass

# client-id : client를 식별하는 고유 정보
# client-secret : 액세스 토큰을 교환하기 위한 비공개 정보 (보통 암호)
#spring.security.oauth2.client.client-id=foo
#spring.security.oauth2.client.client-secret=bar



# h2 db 방언 사용 
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#하이버네이트가 실행하는 모든 SQL문을 콘솔로 출력해 준다. 
#spring.jpa.properties.hibernate.show_sql=true 
#콘솔에 출력되는 JPA 실행 쿼리를 가독성있게 표현한다. 
#spring.jpa.properties.hibernate.format_sql=true 
#디버깅이 용이하도록 SQL문 이외에 추가적인 정보를 출력해 준다. 
#spring.jpa.properties.hibernate.use_sql_comments=true
